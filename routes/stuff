let sqlquery = `SELECT   post_id, p.post_date, t.topic_title, p.post_title, p.post_content, u.username
                        FROM     posts p
                        JOIN     topics t
                        ON       t.topic_id=p.topic_id
                        JOIN     users u
                        ON       u.user_id = p.user_id
                        WHERE    u.username = ?
                        ORDER BY post_date`;

let sqlquery = `SELECT   post_id, p.post_date, t.topic_title, p.post_title, p.post_content, u.username
                        FROM     posts p
                        JOIN     topics t
                        ON       t.topic_id=p.topic_id
                        JOIN     users u
                        ON       u.user_id = p.user_id
                        WHERE    t.topic_title = ?
                        ORDER BY post_date`;

let sqlquery = `SELECT   post_id, p.post_date, t.topic_title, p.post_title, p.post_content, u.username
                        FROM     posts p
                        JOIN     topics t
                        ON       t.topic_id=p.topic_id
                        JOIN     users u
                        ON       u.user_id = p.user_id
                        ORDER BY post_date DESC`;



DELIMITER //
CREATE PROCEDURE sp_insert_post(IN p_post_title VARCHAR(30), IN p_post_content MEDIUMTEXT, IN p_topic_title VARCHAR(20), IN p_username VARCHAR(15))
BEGIN
DECLARE v_user_id INT;
DECLARE v_topic_id INT;
DECLARE v_user_is_member INT;

SELECT user_id 
FROM   users 
WHERE  username = p_username 
INTO v_user_id;

IF ISNULL(v_user_id) THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No matching username found';
END IF;

SELECT topic_id 
FROM topics 
WHERE topic_title = p_topic_title 
INTO v_topic_id;

IF ISNULL(v_topic_id) THEN
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No matching topic found';
END IF;

SELECT COUNT(*) AS countmembership 
FROM membership 
WHERE user_id=v_user_id AND topic_id=v_topic_id
INTO v_user_is_member;

IF v_user_is_member=0 THEN
SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'User is not a member of that topic';
END IF;

INSERT INTO posts (post_date, post_title, post_content, user_id, topic_id)
VALUES (now(), p_post_title, p_post_content, v_user_id, v_topic_id);
END 
//
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_insert_reply(IN reply mediumtext, IN p_post_id int, IN p_username varchar(15))
BEGIN

DECLARE v_user_id INT;  
DECLARE v_topic_id INT; 
DECLARE v_post_id INT;
DECLARE v_user_is_member INT;

SELECT user_id 
FROM  users 
WHERE username = p_username 
INTO   v_user_id;
  
IF Isnull(v_user_id) then signal sqlstate '45000'
SET message_text = 'No matching username found'; 
END IF;

SELECT topic_id
FROM   posts 
WHERE  post_id = p_post_id
INTO    v_topic_id; 
 
IF Isnull(v_topic_id) then
    signal sqlstate '45000'
SET message_text = 'No matching post found';  
END IF;      

SELECT Count(*) AS countmembership  
FROM          membership  
WHERE        user_id=v_user_id
AND    topic_id=v_topic_id  
INTO  v_user_is_member;    

IF v_user_is_member=0 
then
    signal sqlstate '45000'
SET message_text = 'User is not a member of that topic';  
END IF;  

INSERT INTO replys(reply,user_id,topic_id,post_id)
VALUES(reply,v_user_id,v_topic_id,p_post_id);
END //
delimiter ;


CREATE View vw_replies AS
SELECT  p.post_id, p.post_date, p.post_title, p.post_content, r.reply, u.username AS repliesUserName, us.username AS postsUsername
FROM posts p
LEFT JOIN replys r
ON r.post_id = p.post_id
LEFT JOIN users u
ON p.user_id = u.user_id
LEFT JOIN users us
ON p.user_id = us.user_id;

//vw_posts4
CREATE VIEW vw_posts AS
SELECT post_id, p.post_date, t.topic_title, p.post_title, p.post_content, u.username
FROM posts p
JOIN topics t
ON t.topic_id=p.topic_id
JOIN users u
ON u.user_id = p.user_id